name: Build

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-lints:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        working-directory: src-tauri
      - name: Install cargo-about
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-about
          version: "=0.5.1"
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: Enable corepack
        run: corepack enable
      - name: Install NPM dependencies
        run: yarn install --immutable --check-cache
      - name: Install build packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libpython3-dev libdbus-1-dev libgtk-3-dev libsoup-gnome2.4-dev libwebkit2gtk-4.0-dev
          version: 1.0
      - name: Check Rust formatting
        working-directory: src-tauri
        run: cargo fmt --check
      - name: Check ESLint lints
        if: success() || failure()
        run: |
          yarn run lint
          (exit `git status --porcelain=v1 2>/dev/null | wc -l)
      - name: Check Clippy lints (Debug)
        if: success() || failure()
        working-directory: src-tauri
        run: cargo clippy --no-deps --locked -- --deny warning --deny clippy::all
      - name: Check Clippy lints (Release)
        if: success() || failure()
        working-directory: src-tauri
        run: cargo clippy --no-deps --locked --release -- --deny warning --deny clippy::all
      - name: Check third-party licenses
        if: success() || failure()
        run: |
          git restore .
          ./update_dependencies.sh
          (exit `git status --porcelain=v1 2>/dev/null | wc -l)
